% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotEDENChange.R
\name{plotEDENChange}
\alias{plotEDENChange}
\title{Calculate ascension/recession rates over some time period}
\usage{
plotEDENChange(
  EDEN_date = Sys.Date(),
  changePeriod = 2,
  poor = c(c(0, Inf), c(-Inf, -0.18 * 12)),
  fair = c(c(-0.01 * 12, 0), c(-0.18 * 12, -0.05 * 12)),
  good = c(-0.05 * 12, -0.01 * 12),
  plotOutput = NULL,
  addToPlot = NA
)
}
\arguments{
\item{EDEN_date}{Date (format = '\%Y-\%m-\%d') at end of recession rate calculation.}

\item{changePeriod}{Time period (units = weeks) over which stage changes are measured. Default is two weeks.}

\item{poor}{Vector of paired values identifying 'poor' ascension/recession rates. Units must be inches/week. Pairs must have the lower value first, e.g., c(0, Inf, -Inf, -1.8)}

\item{fair}{Vector of paired values identifying 'fair' ascension/recession rates. Units must be inches/week. Pairs must have the lower value first}

\item{good}{Vector of paired values identifying 'good' ascension/recession rates. Units must be inches/week. Pairs must have the lower value first.}

\item{plotOutput}{If the produced plot should be saved, use this argument to set the filename (include any extension, e.g. "plot.png").}

\item{addToPlot}{If you'd like an SPDF added to the plot, pass it to this argument.}
}
\value{
list \code{plotEDENChange} returns a list with the calculated rates (stageChange; units are inches/week), rates categorized into poor/fair/good (categories), a description of the time period used (description), and the criteria used to assign categories (criteria; units are inches/week)
}
\description{
Calculates two-point ascension/recession rates from EDEN data. Produces a map, and two verisons of the raster output (one with rates of change, and one with rates categorized into poor/fair/good)
}
\examples{
\dontrun{
### by default, the most recent two-week period in EDEN is used
plotOut <- plotWLChange(addToPlot = sfwmd.shp)
ylim.range <- max(abs(floor(cellStats(plotOut$stageChange, min))), 
abs(ceiling(cellStats(plotOut$stageChange, max))))

spplot(plotOut$stageChange, main = plotOut$description, # inches/week
col.regions=colorRampPalette(c('red', 'white', 'blue'))(100),
at = seq(-ylim.range, ylim.range, by = 0.5))  + 
latticeExtra::layer(sp.polygons(sfwmd.shp, fill = NA))

### identify recession rates at specific locations
extract(plotOut$stageChange, bay.coords, fun = mean)
extract(plotOut$categories, bay.coords, fun = mean)
}

}
